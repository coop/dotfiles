# xdg
source "${FRESH_LOCAL}/shell/config/xdg.sh"
mkdir -p $XDG_MAN_HOME/man1 $XDG_BIN_HOME

# fresh
fresh "freshshell/fresh" "bin/fresh" --bin

which_dist() {
  case $(uname -s) in
    Darwin) echo "mac";;
    Linux) echo "linux";;
  esac
}

fresh-bashrc() {
  local file="$1" && shift
  local dist_file="$file.$(which_dist)"

  for rc in "${HOME}/.bash_profile" "${HOME}/.bashrc"; do
    fresh "$file" "$@" --file="$rc" --marker="#"

    if [[ -f "$FRESH_LOCAL/$dist_file" ]]; then
      fresh "$dist_file" "$@" --file="$rc" --marker="#" --ignore-missing
    fi
  done
}

fresh-vimrc() {
  fresh "$@" --file="${vim_config_dir}/vimrc" --marker="\""
}

fresh-install() {
  local file="$1" && shift

  "$FRESH_LOCAL/$file" "$@"
}

# install directories
vim_config_dir="${XDG_CONFIG_HOME}/vim"
vim_cache_dir="${XDG_CACHE_HOME}/vim"
vim_data_dir="${XDG_DATA_HOME}/vim"

fresh-bashrc "shell/config/bashrc.sh"
fresh-bashrc "shell/config/xdg.sh"
fresh-bashrc "shell/config/coreutils.sh"

# bash
for file in "${HOME}/.bash_profile" "${HOME}/.bashrc"; do
  fresh-options --file=$file --marker="#"
    fresh "shell/functions/*.sh"
    fresh "shell/config/history.sh"
    fresh "shell/config/case-insensitive-globbing.sh"
    fresh "shell/config/symlink.sh"
    fresh "shell/config/prompt.sh"
    fresh "shell/config/fresh.sh"
    fresh "shell/config/editor.sh"
    fresh "shell/config/vim.sh" --filter="sed s,CONFIG_DIR,$vim_config_dir,"
    fresh "shell/config/clipboard.sh"
    fresh "shell/config/direnv.sh"
    fresh "shell/config/pssh.sh"
  fresh-options
done

# dnssimple
fresh "dnssimple/bin/dnssimple.sh" --bin="$XDG_BIN_HOME/dnssimple"

# less
less_history_dir="${XDG_CACHE_HOME}/less"
fresh-install "less/create-history-directory.sh" "${less_history_dir}"
fresh-bashrc "less/bash/less.sh" --filter="sed s,INSTALL_DIR,$less_history_dir,"

# asdf
asdf_install_dir="${XDG_DATA_HOME}/asdf"
fresh-install "asdf/install.sh" "$asdf_install_dir"
fresh-bashrc "asdf/bash/asdf.sh" --filter="sed s,INSTALL_DIR,$asdf_install_dir,"
fresh "asdf/bash/legacy-version-file" --file="$HOME/.asdfrc"

# chromedriver
fresh-install "chromedriver/install.sh"

# git
fresh-install "git/create-xdg-directories.sh"
fresh-install "git/create-local-config.sh"

fresh-options --file="${XDG_CONFIG_HOME}/git/config" --marker="#"
  fresh "git/config"
  fresh "git/include" --filter="sed s,XDG_CONFIG_HOME,$XDG_CONFIG_HOME,"
  fresh "git/alias"
  fresh "git/aliases/*"
fresh-options

fresh "git/bin/git-prune-all" --bin="$XDG_BIN_HOME/git-prune-all"
fresh "git/bin/git-push-each" --bin="$XDG_BIN_HOME/git-push-each"

fresh-options --file="${XDG_CONFIG_HOME}/git/ignore" --marker="#"
  fresh "github/gitignore" "Global/macOS.gitignore"
  fresh "github/gitignore" "Global/Tags.gitignore"
  fresh "github/gitignore" "Global/Vim.gitignore"
  fresh "github/gitignore" "Ruby.gitignore"
  fresh "github/gitignore" "Node.gitignore"
fresh-options

# gnupg
gpg_home_dir="$XDG_CONFIG_HOME/gnupg"
fresh "gnupg/config/gpg.conf" --file="$gpg_home_dir/gpg.conf" --marker="#"
fresh "gnupg/git/gpg.git" --file="${XDG_CONFIG_HOME}/git/config" --marker="#"
fresh-bashrc "gnupg/bash/gpg.sh" --filter="sed s,GPG_HOME_DIR,$gpg_home_dir,"
fresh-install "gnupg/install.sh" "$gpg_home_dir"

# alacritty
fresh-options --file="${XDG_CONFIG_HOME}/alacritty/alacritty.yml" --marker="#"
  fresh "alacritty/env.yml"
  fresh "alacritty/dimensions.yml"
  fresh "alacritty/dpi.yml"
  fresh "alacritty/tabspaces.yml"
  fresh "alacritty/fonts.yml"
  fresh "alacritty/render-timer.yml"
  fresh "alacritty/cursor.yml"
  fresh "alacritty/colors.yml"
  fresh "alacritty/visual-bell.yml"
  fresh "alacritty/key-bindings.yml"
  fresh "alacritty/mouse.yml"
  fresh "alacritty/shell.yml"
fresh-options

# vim
fresh-install "vim/install.sh" "${vim_cache_dir}" "${vim_config_dir}" "${vim_data_dir}"

fresh-options --file="${vim_config_dir}/vimrc" --marker="\""
  fresh "vim/required.vim"
  fresh "vim/xdg.vim" --filter="sed s,CONFIG_DIR,$vim_config_dir,g | sed s,CACHE_DIR,$vim_cache_dir, | sed s,DATA_DIR,$vim_data_dir,"
  fresh "vim/global.vim"
  fresh "vim/config/*.vim" --filter="sed s,CONFIG_DIR,$vim_config_dir, | sed s,CACHE_DIR,$vim_cache_dir,g"
  fresh "jasoncodes/dotfiles" "vim/config/fast_escape.vim"
  fresh "vim/mappings.vim"
  fresh "jasoncodes/dotfiles" "vim/mappings/disable-cursor-keys.vim"
fresh-options

# vim-plug -- vim plugins are required to be defined **after** this
fresh-install "vim-plug/install.sh" "${vim_data_dir}"
fresh-vimrc "vim-plug/vim/plug-begin.vim" --filter="sed s,CONFIG_DIR,$vim_config_dir, | sed s,DATA_DIR,$vim_data_dir,g"

# rest of vim plugins
fresh-vimrc "vim/plugins/*.vim"

# base16
fresh-install "base16/install-shell.sh" "$XDG_DATA_HOME/base16/shell"
fresh-bashrc "base16/bash/base16-theme.sh" --filter="sed s,INSTALL_DIR,$XDG_DATA_HOME/base16/shell,"
fresh-install "base16/install-vim.sh" "$XDG_DATA_HOME/base16/vim"
fresh-vimrc "base16/vim/base16-theme.vim"

# rg
fresh-install "rg/install.sh"
fresh-bashrc "rg/bash/rg.sh"
fresh-vimrc "rg/vim/rg.vim"

# vim-plug end
fresh-vimrc "vim-plug/vim/plug-end.vim"

fresh-install "hub/install-hub.sh"
fresh-install "docker/install-docker-compose.sh"

fresh_after_build() {
  fresh-install "vim-plug/plug-install.sh"
  fresh-install "vim-plug/plug-clean.sh"
}
